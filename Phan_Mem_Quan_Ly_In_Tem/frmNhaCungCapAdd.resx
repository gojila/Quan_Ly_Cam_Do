<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bm.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="frmNhaCungCapAdd.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>